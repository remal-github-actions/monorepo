List<String> dependencyPlatforms = [
    'com.squareup.okhttp3:okhttp-bom:4.9.3',
    'com.fasterxml.jackson:jackson-bom:2.13.3',
    'org.apache.logging.log4j:log4j-bom:2.17.2',
    'org.junit:junit-bom:5.8.2',
    'org.mockito:mockito-bom:4.6.0',
]

String autoServiceVersion = '1.0.1'

List<String> dependencyConstraints = [
    'com.google.code.findbugs:jsr305:3.0.2',
    'org.jetbrains:annotations:23.0.0',
    'com.github.spotbugs:spotbugs-annotations:4.7.0',
    'com.infradna.tool:bridge-method-annotation:1.23',

    'org.projectlombok:lombok:1.18.24',
    "com.google.auto.service:auto-service:$autoServiceVersion",
    "com.google.auto.service:auto-service-annotations:$autoServiceVersion",

    'org.kohsuke:github-api:1.306',
    'com.google.guava:guava:31.1-jre',
    'org.fusesource.jansi:jansi:2.4.0',
    'com.squareup:javapoet:1.13.0',

    'kr.motd.maven:os-maven-plugin:1.7.0',
]

allprojects {
    pluginManager.withPlugin('java') {
        dependencyPlatforms.forEach { project.registerSourceSetsBomConstraints(it) }
        dependencyConstraints.forEach { project.registerSourceSetsConstraint(it) }

        project.allSourceSetsModifiableConfigurations.all { Configuration conf ->
            conf.dependencies.withType(ExternalModuleDependency).all { ExternalModuleDependency dep ->
                if ("${dep.group}:${dep.name}" == 'com.google.guava:guava'
                    || "${dep.group}:${dep.name}" == 'com.google.auto.service:auto-service'
                ) {
                    dep.exclude group: 'com.google.code.findbugs'
                    dep.exclude group: 'com.google.errorprone'
                    dep.exclude group: 'com.google.j2objc'
                    dep.exclude group: 'org.checkerframework'

                } else if ("${dep.group}:${dep.name}" == 'kr.motd.maven:os-maven-plugin') {
                    dep.transitive = false
                }
            }
        }

        project.replaceModule('junit:junit', 'io.quarkus:quarkus-junit4-mock', 'don\'t use JUnit4')
    }
}
